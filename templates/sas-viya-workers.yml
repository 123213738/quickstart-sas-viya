---
AWSTemplateFormatVersion: 2010-09-09

Description: >-
  This template optionally deploys CAS worker nodes for the SAS Viya stack.


Parameters:
  NodeInstanceSize:
    Type: String
  AMI:
    Type: String
  NumWorkers:
    Type: Number
  KeyPairName:
    Type: AWS::EC2::KeyPair::KeyName
  PrivateSubnetID:
    Type: AWS::EC2::Subnet::Id
  QSS3BucketName:
    Type: String
  QSS3KeyPrefix:
    Type: String

  ParentStack:
    Type: String
  CloudWatchLogGroup:
    Type: String
  ViyaProfile:
    Type: String
  ViyaRole:
    Type: String
  ViyaPlacementGroup:
    Type: String
  ViyaSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
  SNSTopic:
    Type: String


Conditions:
  GovCloudCondition: !Equals
    - !Ref AWS::Region
    - us-gov-west-1
  SNSCondition: !Not
    - !Equals
      - !Ref SNSTopic
      - ""

  1WorkersCondition:
    Fn::Or:
    - Fn::Equals:
      - !Ref NumWorkers
      - '1'
    - Condition: 2WorkersCondition
    - Condition: 3WorkersCondition
  2WorkersCondition:
    Fn::Or:
    - Fn::Equals:
      - !Ref NumWorkers
      - '2'
    - Condition: 3WorkersCondition
  3WorkersCondition:
    Fn::Equals:
    - !Ref NumWorkers
    - '3'

Resources:

  RecoveryAlarmWorker1:
    Type: AWS::CloudWatch::Alarm
    Condition: 1WorkersCondition
    Properties:
      AlarmDescription: Trigger a recovery when instance status check fails more than once in 2 minutes.
      Namespace: AWS/EC2
      MetricName: StatusCheckFailed_System
      Statistic: Maximum
      Period: '60'
      EvaluationPeriods: '2'
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Threshold: '1'
      AlarmActions:
        - !Sub "arn:aws:automate:${AWS::Region}:ec2:recover"
        - !If [SNSCondition, !Sub "${SNSTopic}", !Ref "AWS::NoValue"]
      Dimensions:
      - Name: InstanceId
        Value:
          Ref: CASWorker1

  RecoveryAlarmWorker2:
    Type: AWS::CloudWatch::Alarm
    Condition: 2WorkersCondition
    Properties:
      AlarmDescription: Trigger a recovery when instance status check fails more than once in 2 minutes.
      Namespace: AWS/EC2
      MetricName: StatusCheckFailed_System
      Statistic: Maximum
      Period: '60'
      EvaluationPeriods: '2'
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Threshold: '1'
      AlarmActions:
        - !Sub "arn:aws:automate:${AWS::Region}:ec2:recover"
        - !If [SNSCondition, !Sub "${SNSTopic}", !Ref "AWS::NoValue"]
      Dimensions:
      - Name: InstanceId
        Value:
          Ref: CASWorker2

  RecoveryAlarmWorker3:
    Type: AWS::CloudWatch::Alarm
    Condition: 3WorkersCondition
    Properties:
      AlarmDescription: Trigger a recovery when instance status check fails more than once in 2 minutes.
      Namespace: AWS/EC2
      MetricName: StatusCheckFailed_System
      Statistic: Maximum
      Period: '60'
      EvaluationPeriods: '2'
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Threshold: '1'
      AlarmActions:
        - !Sub "arn:aws:automate:${AWS::Region}:ec2:recover"
        - !If [SNSCondition, !Sub "${SNSTopic}", !Ref "AWS::NoValue"]
      Dimensions:
      - Name: InstanceId
        Value:
          Ref: CASWorker3


  CASWorker1:
    Condition: 1WorkersCondition
    Type: AWS::EC2::Instance
    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: 'PT10M'
    Metadata:
      'AWS::CloudFormation::Authentication':
        S3AccessCreds:
          type: S3
          roleName: !Ref ViyaRole
          buckets:
            - !Ref QSS3BucketName
      'AWS::CloudFormation::Init':
        configSets:
          quickstart:
            - install
            - configure
            - cleanup
        install:
          files:
            /tmp/diskprep.sh:
              source: !Sub
                - >-
                  https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/diskprep.sh
                - QSS3Region: !If
                    - GovCloudCondition
                    - s3-us-gov-west-1
                    - s3
              mode: '000550'
              owner: root
              group: root
              authentication: S3AccessCreds
            /usr/sbin/disks_ephemeral.sh:
              source: !Sub
                - >-
                  https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/disks_ephemeral.sh
                - QSS3Region: !If
                    - GovCloudCondition
                    - s3-us-gov-west-1
                    - s3
              mode: '000550'
              owner: root
              group: root
              authentication: S3AccessCreds

            /tmp/node_setup.sh:
              source: !Sub
                - >-
                  https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/node_setup.sh
                - QSS3Region: !If
                    - GovCloudCondition
                    - s3-us-gov-west-1
                    - s3
              mode: '000550'
              owner: root
              group: root
              authentication: S3AccessCreds
              context:
                AWSRegion: !Ref AWS::Region
                CloudFormationStack: !Ref ParentStack
            /tmp/cloudwatch.conf:
              source: !Sub
                - >-
                  https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/cloudwatch.conf
                - QSS3Region: !If
                    - GovCloudCondition
                    - s3-us-gov-west-1
                    - s3
              mode: '000440'
              owner: root
              group: root
              authentication: S3AccessCreds
              context:
                LogGroup: !Ref CloudWatchLogGroup
                Role: cas-worker1

          commands:
            01-diskprep:
              command: /tmp/diskprep.sh
            02-setup:
              command: /tmp/node_setup.sh
        configure: {}
        cleanup: {}
    Properties:
      KeyName: !Ref KeyPairName
      ImageId: !Ref AMI
      SubnetId: !Ref PrivateSubnetID
      IamInstanceProfile: !Ref ViyaProfile
      # transform "Nxlarge (N cores)" to "i3.Nxlarge"
      InstanceType: !Join
         - ''
         - - 'i3.'
           - !Ref NodeInstanceSize
      EbsOptimized: true
      PlacementGroupName: !Ref ViyaPlacementGroup
      SecurityGroupIds:
        - !Ref ViyaSecurityGroup
      BlockDeviceMappings:
        - DeviceName: /dev/sdg
          Ebs:
            VolumeSize: '50'
            VolumeType: gp2
            DeleteOnTermination: true
        - DeviceName: /dev/sdh
          VirtualName: ephemeral0
        - DeviceName: /dev/sdi
          VirtualName: ephemeral1
        - DeviceName: /dev/sdj
          VirtualName: ephemeral2
        - DeviceName: /dev/sdk
          VirtualName: ephemeral3
        - DeviceName: /dev/sdl
          VirtualName: ephemeral4
        - DeviceName: /dev/sdm
          VirtualName: ephemeral5
        - DeviceName: /dev/sdn
          VirtualName: ephemeral6
        - DeviceName: /dev/sdo
          VirtualName: ephemeral7
      Tags:
        - Key: Name
          Value: !Join
            - ' '
            - - !Ref ParentStack
              - CAS Worker 1
      UserData: !Base64
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash
            - |
              export PATH=$PATH:/usr/local/bin
            - |
              which pip &> /dev/null
            - |
              if [ $? -ne 0 ] ; then
            - |2
                  echo "PIP NOT INSTALLED"
            - |2
                  [ `which yum` ] && $(yum install -y epel-release; yum install -y python-pip) && echo "PIP INSTALLED"
            - |2
                  [ `which apt-get` ] && apt-get -y update && apt-get -y install python-pip && echo "PIP INSTALLED"
            - |
              fi
            - |
              pip install --upgrade pip &> /dev/null
            - |
              pip install awscli --ignore-installed six &> /dev/null
            - |
              function try () {
                RC=1; count=1; max_count=$1; shift
                until  [ $count -gt "$max_count" ]
                do
                  "$@" && RC=0 && break || let count=count+1
                done
                return $RC
              }
            - >
              try 2 easy_install
              https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz
            - |
            - 'cfn-init --stack '
            - !Ref AWS::StackName
            - ' --resource CASWorker1 --configsets quickstart --region '
            - !Ref AWS::Region
            - |+

            - |
              # Signal the status from cfn-init
            - 'cfn-signal -e $? --stack '
            - !Ref AWS::StackName
            - ' --resource CASWorker1 --region '
            - !Ref AWS::Region
            - |+

  CASWorker2:
    Condition: 2WorkersCondition
    Type: AWS::EC2::Instance
    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: 'PT10M'
    Metadata:
      'AWS::CloudFormation::Authentication':
        S3AccessCreds:
          type: S3
          roleName: !Ref ViyaRole
          buckets:
            - !Ref QSS3BucketName
      'AWS::CloudFormation::Init':
        configSets:
          quickstart:
            - install
            - configure
            - cleanup
        install:
          files:
            /tmp/diskprep.sh:
              source: !Sub
                - >-
                  https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/diskprep.sh
                - QSS3Region: !If
                    - GovCloudCondition
                    - s3-us-gov-west-1
                    - s3
              mode: '000550'
              owner: root
              group: root
              authentication: S3AccessCreds
            /usr/sbin/disks_ephemeral.sh:
              source: !Sub
                - >-
                  https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/disks_ephemeral.sh
                - QSS3Region: !If
                    - GovCloudCondition
                    - s3-us-gov-west-1
                    - s3
              mode: '000550'
              owner: root
              group: root
              authentication: S3AccessCreds

            /tmp/node_setup.sh:
              source: !Sub
                - >-
                  https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/node_setup.sh
                - QSS3Region: !If
                    - GovCloudCondition
                    - s3-us-gov-west-1
                    - s3
              mode: '000550'
              owner: root
              group: root
              authentication: S3AccessCreds
              context:
                AWSRegion: !Ref AWS::Region
                CloudFormationStack: !Ref ParentStack
            /tmp/cloudwatch.conf:
              source: !Sub
                - >-
                  https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/cloudwatch.conf
                - QSS3Region: !If
                    - GovCloudCondition
                    - s3-us-gov-west-1
                    - s3
              mode: '000440'
              owner: root
              group: root
              authentication: S3AccessCreds
              context:
                LogGroup: !Ref CloudWatchLogGroup
                Role: cas-worker2

          commands:
            01-diskprep:
              command: /tmp/diskprep.sh
            02-setup:
              command: /tmp/node_setup.sh
        configure: {}
        cleanup: {}
    Properties:
      KeyName: !Ref KeyPairName
      ImageId: !Ref AMI
      SubnetId: !Ref PrivateSubnetID
      IamInstanceProfile: !Ref ViyaProfile
      # transform "Nxlarge (N cores)" to "i3.Nxlarge"
      InstanceType: !Join
         - ''
         - - 'i3.'
           - !Ref NodeInstanceSize
      EbsOptimized: true
      PlacementGroupName: !Ref ViyaPlacementGroup
      SecurityGroupIds:
        - !Ref ViyaSecurityGroup
      BlockDeviceMappings:
        - DeviceName: /dev/sdg
          Ebs:
            VolumeSize: '50'
            VolumeType: gp2
            DeleteOnTermination: true
        - DeviceName: /dev/sdh
          VirtualName: ephemeral0
        - DeviceName: /dev/sdi
          VirtualName: ephemeral1
        - DeviceName: /dev/sdj
          VirtualName: ephemeral2
        - DeviceName: /dev/sdk
          VirtualName: ephemeral3
        - DeviceName: /dev/sdl
          VirtualName: ephemeral4
        - DeviceName: /dev/sdm
          VirtualName: ephemeral5
        - DeviceName: /dev/sdn
          VirtualName: ephemeral6
        - DeviceName: /dev/sdo
          VirtualName: ephemeral7
      Tags:
        - Key: Name
          Value: !Join
            - ' '
            - - !Ref ParentStack
              - CAS Worker 2
      UserData: !Base64
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash
            - |
              export PATH=$PATH:/usr/local/bin
            - |
              which pip &> /dev/null
            - |
              if [ $? -ne 0 ] ; then
            - |2
                  echo "PIP NOT INSTALLED"
            - |2
                  [ `which yum` ] && $(yum install -y epel-release; yum install -y python-pip) && echo "PIP INSTALLED"
            - |2
                  [ `which apt-get` ] && apt-get -y update && apt-get -y install python-pip && echo "PIP INSTALLED"
            - |
              fi
            - |
              pip install --upgrade pip &> /dev/null
            - |
              pip install awscli --ignore-installed six &> /dev/null
            - |
              function try () {
                RC=1; count=1; max_count=$1; shift
                until  [ $count -gt "$max_count" ]
                do
                  "$@" && RC=0 && break || let count=count+1
                done
                return $RC
              }
            - >
              try 2 easy_install
              https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz
            - |
            - 'cfn-init --stack '
            - !Ref AWS::StackName
            - ' --resource CASWorker2 --configsets quickstart --region '
            - !Ref AWS::Region
            - |+

            - |
              # Signal the status from cfn-init
            - 'cfn-signal -e $? --stack '
            - !Ref AWS::StackName
            - ' --resource CASWorker2 --region '
            - !Ref AWS::Region
            - |+

  CASWorker3:
    Condition: 3WorkersCondition
    Type: AWS::EC2::Instance
    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: 'PT10M'
    Metadata:
      'AWS::CloudFormation::Authentication':
        S3AccessCreds:
          type: S3
          roleName: !Ref ViyaRole
          buckets:
            - !Ref QSS3BucketName
      'AWS::CloudFormation::Init':
        configSets:
          quickstart:
            - install
            - configure
            - cleanup
        install:
          files:
            /tmp/diskprep.sh:
              source: !Sub
                - >-
                  https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/diskprep.sh
                - QSS3Region: !If
                    - GovCloudCondition
                    - s3-us-gov-west-1
                    - s3
              mode: '000550'
              owner: root
              group: root
              authentication: S3AccessCreds
            /usr/sbin/disks_ephemeral.sh:
              source: !Sub
                - >-
                  https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/disks_ephemeral.sh
                - QSS3Region: !If
                    - GovCloudCondition
                    - s3-us-gov-west-1
                    - s3
              mode: '000550'
              owner: root
              group: root
              authentication: S3AccessCreds

            /tmp/node_setup.sh:
              source: !Sub
                - >-
                  https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/node_setup.sh
                - QSS3Region: !If
                    - GovCloudCondition
                    - s3-us-gov-west-1
                    - s3
              mode: '000550'
              owner: root
              group: root
              authentication: S3AccessCreds
              context:
                AWSRegion: !Ref AWS::Region
                CloudFormationStack: !Ref ParentStack
            /tmp/cloudwatch.conf:
              source: !Sub
                - >-
                  https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/cloudwatch.conf
                - QSS3Region: !If
                    - GovCloudCondition
                    - s3-us-gov-west-1
                    - s3
              mode: '000440'
              owner: root
              group: root
              authentication: S3AccessCreds
              context:
                LogGroup: !Ref CloudWatchLogGroup
                Role: cas-worker3

          commands:
            01-diskprep:
              command: /tmp/diskprep.sh
            02-setup:
              command: /tmp/node_setup.sh
        configure: {}
        cleanup: {}
    Properties:
      KeyName: !Ref KeyPairName
      ImageId: !Ref AMI
      SubnetId: !Ref PrivateSubnetID
      IamInstanceProfile: !Ref ViyaProfile
      # transform "Nxlarge (N cores)" to "i3.Nxlarge"
      InstanceType: !Join
         - ''
         - - 'i3.'
           - !Ref NodeInstanceSize
      EbsOptimized: true
      PlacementGroupName: !Ref ViyaPlacementGroup
      SecurityGroupIds:
        - !Ref ViyaSecurityGroup
      BlockDeviceMappings:
        - DeviceName: /dev/sdg
          Ebs:
            VolumeSize: '50'
            VolumeType: gp2
            DeleteOnTermination: true
        - DeviceName: /dev/sdh
          VirtualName: ephemeral0
        - DeviceName: /dev/sdi
          VirtualName: ephemeral1
        - DeviceName: /dev/sdj
          VirtualName: ephemeral2
        - DeviceName: /dev/sdk
          VirtualName: ephemeral3
        - DeviceName: /dev/sdl
          VirtualName: ephemeral4
        - DeviceName: /dev/sdm
          VirtualName: ephemeral5
        - DeviceName: /dev/sdn
          VirtualName: ephemeral6
        - DeviceName: /dev/sdo
          VirtualName: ephemeral7
      Tags:
        - Key: Name
          Value: !Join
            - ' '
            - - !Ref ParentStack
              - CAS Worker 3
      UserData: !Base64
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash
            - |
              export PATH=$PATH:/usr/local/bin
            - |
              which pip &> /dev/null
            - |
              if [ $? -ne 0 ] ; then
            - |2
                  echo "PIP NOT INSTALLED"
            - |2
                  [ `which yum` ] && $(yum install -y epel-release; yum install -y python-pip) && echo "PIP INSTALLED"
            - |2
                  [ `which apt-get` ] && apt-get -y update && apt-get -y install python-pip && echo "PIP INSTALLED"
            - |
              fi
            - |
              pip install --upgrade pip &> /dev/null
            - |
              pip install awscli --ignore-installed six &> /dev/null
            - |
              function try () {
                RC=1; count=1; max_count=$1; shift
                until  [ $count -gt "$max_count" ]
                do
                  "$@" && RC=0 && break || let count=count+1
                done
                return $RC
              }
            - >
              try 2 easy_install
              https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz
            - |
            - 'cfn-init --stack '
            - !Ref AWS::StackName
            - ' --resource CASWorker3 --configsets quickstart --region '
            - !Ref AWS::Region
            - |+

            - |
              # Signal the status from cfn-init
            - 'cfn-signal -e $? --stack '
            - !Ref AWS::StackName
            - ' --resource CASWorker3 --region '
            - !Ref AWS::Region
            - |+

Outputs:
  CASWorker1IP:
    Description: CAS Worker 1 IP address
    Condition: 1WorkersCondition
    Value: !GetAtt
      - CASWorker1
      - PrivateIp
  CASWorker2IP:
    Description: CAS Worker 2 IP address
    Condition: 2WorkersCondition
    Value: !GetAtt
      - CASWorker2
      - PrivateIp
  CASWorker3IP:
    Description: CAS Worker 3 IP address
    Condition: 3WorkersCondition
    Value: !GetAtt
      - CASWorker3
      - PrivateIp



