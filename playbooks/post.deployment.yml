---

- hosts: stateful
  become: yes
  become_user: root

  tasks:
  - name: set up sharedVault
    shell: |
      mkdir -p /opt/sas/backups
      chown sas:sas /opt/sas/backups
      yum -y install nfs-utils
      systemctl start nfs
      systemctl enable nfs
      echo "/opt/sas/backups *(rw,sync)" > /etc/exports
      exportfs -a
      chown sas:sas /opt/sas/backups
    tags:
      - backups

- hosts: sas-all
  become: yes
  become_user: root

  tasks:
  - name: create and mount /backups directory
    shell: |
      mkdir -p /backups
      yum -y install nfs-utils autofs
      echo "/- /etc/auto.backups" > /etc/auto.master
      echo "/backups -rw,soft,uid=$(id sas -u),gid=$(id sas -g) stateful.viya.sas:/opt/sas/backups" > /etc/auto.backups
      systemctl start autofs
      systemctl enable autofs
      chown sas:sas /backups
    tags:
      - backups

  - name: get log directories
    shell: find /opt/sas/viya/config/var/log/* -name default | cut -d'/' -f8
    register: log_dirs
    tags:
       - cloudwatch

  - name: set up cloudwatch agent configuration
    blockinfile:
      dest: /tmp/cloudwatch.conf
      marker: '# {mark} set header'
      insertafter: '[general]'
      block: |
         use_gzip_http_content_encoding = true
         queue_size = 10
    tags:
      - cloudwatch

  - name: create cloudwatch agent configuration
    blockinfile:
      dest: /tmp/cloudwatch.conf
      marker: '# {mark} set {{item}}'
      insertafter: 'EOF'
      block: |
         [/var/log/sas/viya/{{item}}]
         file = /opt/sas/viya/config/var/log/{{item}}/default/*
         log_stream_name = viya-{{item}}-{{inventory_hostname}}.log
         initial_position = start_of_file
         log_group_name = {{CloudWatchLogGroup}}
    with_items: "{{log_dirs.stdout_lines}}"
    tags:
      - cloudwatch

- hosts:
   - visual
   - prog
   - stateful
  become: yes
  become_user: root

  tasks:

  - name: create cloudwatch agent configuration postgres
    blockinfile:
      dest: /tmp/cloudwatch.conf
      marker: '# {mark} set {{item}}'
      insertafter: 'EOF'
      block: |
         [/var/log/sas/viya/{{item}}]
         file = /opt/sas/viya/config/var/log/{{item}}/postgres/node*/*
         log_stream_name = viya-{{item}}-{{inventory_hostname}}.log
         initial_position = start_of_file
         log_group_name = {{CloudWatchLogGroup}}
    with_items: "sasdatasvrc"
    tags:
      - cloudwatch


- hosts: prog
  become: yes
  become_user: root

  tasks:

  - name: create cloudwatch agent configuration workspace/batch server
    blockinfile:
      dest: /tmp/cloudwatch.conf
      marker: '# {mark} set {{item}}'
      insertafter: 'EOF'
      block: |
         [/var/log/sas/viya/{{item}}]
         file = /opt/sas/viya/config/var/log/{{item}}/default/*
         log_stream_name = viya-{{item}}-{{inventory_hostname}}.log
         initial_position = start_of_file
         log_group_name = {{CloudWatchLogGroup}}
    with_items:
      - workspaceserver
      - batchserver
    tags:
      - cloudwatch


- hosts: sas-all
  become: yes
  become_user: root

  tasks:

  - name: restart cloudwatch services
    shell: |
      python /tmp/awslogs-agent-setup.py --region "{{AWSRegion}}" -n -c /tmp/cloudwatch.conf
    tags:
      - cloudwatch


- hosts: controller
  become: yes
  become_user: sas

  tasks:
  - name: add ELB/Domain to CAS configuration
    lineinfile:
      dest: /opt/sas/viya/config/etc/cas/default/casconfig_usermods.lua
      line: "env.CAS_VIRTUAL_HOST = '{{cas_virtual_host}}'"
      state: present
    tags:
      - cas

  - name: restart cas controller
    become: yes
    become_user: root
    service:
      name: sas-viya-cascontroller-default
      state: restarted
    tags:
      - cas

