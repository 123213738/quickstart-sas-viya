---
- hosts: visual
  become: yes
  become_user: sas

  tasks:

  - name: restart saslogon
    become: yes
    become_user: root
    service:
      name: sas-viya-saslogon-default
      state: restarted
    tags:
      - restart

  - name: wait for saslogon to come up fully
    pause:
      minutes: 2
    tags:
      - restart


  - name: Reset the sasboot password
    shell: |
      export HOST=localhost
      export CODE=$(ls -tr /var/log/sas/viya/saslogon/default/sas-saslogon_* | tail -n1 | grep '.log$' | xargs grep 'sasboot' | cut -d'=' -f2)
      [ -n "$CODE" ] # fail if no value is found
      # make the first request, this expands the link
      curl http://${HOST}/SASLogon/reset_password?code=${CODE} -c cookies -o output
      # get a few things out of the output to use in the next request
      export CSRF_TOKEN=$(grep 'name="_csrf"' output | cut -f 6 -d '"')
      export NEW_CODE=$(grep 'name="code"' output | cut -f 6 -d '"')
      echo CSRF_TOKEN=$CSRF_TOKEN
      echo NEW_CODE=$NEW_CODE
      curl -f --cookie cookies http://${HOST}/SASLogon/reset_password.do -H "Content-Type: application/x-www-form-urlencoded" -d "code=${NEW_CODE}&email=none" -d 'password={{sasboot_pw|b64decode|urlencode}}' -d 'password_confirmation={{sasboot_pw|b64decode|urlencode}}' -d "_csrf=${CSRF_TOKEN}"
    register: sasbootpw
    args:
      executable: /bin/bash
    tags:
      - sasboot

  - debug: var=sasbootpw
    tags:
      - sasboot
      - restart


- hosts: stateful
  become: yes
  become_user: root

  tasks:
  - name: set up sharedVault
    become: yes
    become_user: root
    shell: |
      mkdir -p /opt/sas/backups
      chown sas:sas /opt/sas/backups
      yum -y install nfs-utils
      systemctl start nfs
      systemctl enable nfs
      echo "/opt/sas/backups *(rw,sync)" > /etc/exports
      exportfs -a
      chown sas:sas /opt/sas/backups
    tags:
      - backups

- hosts: sas-all
  become: yes
  become_user: root

  tasks:
  - name: create and mount /backups directory
    shell: |
      mkdir -p /backups
      yum -y install nfs-utils autofs
      echo "/- /etc/auto.backups" > /etc/auto.master
      echo "/backups -rw,soft,uid=$(id sas -u),gid=$(id sas -g) stateful.viya.sas:/opt/sas/backups" > /etc/auto.backups
      systemctl start autofs
      systemctl enable autofs
      chown sas:sas /backups
    tags:
      - backups

- hosts: controller
  become: yes
  become_user: sas

  tasks:
  - name: add ELB/Domain to CAS configuration
    lineinfile:
      dest: /opt/sas/viya/config/etc/cas/default/casconfig_usermods.lua
      line: "env.CAS_VIRTUAL_HOST = '{{cas_virtual_host}}'"
      state: present
    tags:
      - cas

  - name: restart cas controller
    become: yes
    become_user: root
    service:
      name: sas-viya-cascontroller-default
      state: restarted
    tags:
      - cas

